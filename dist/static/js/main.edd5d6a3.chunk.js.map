{"version":3,"sources":["components/layout/signedInLinks.js","store/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/navbar.js","components/dashboard/notification.js","components/projects/projectSummary.js","components/projects/projectList.js","components/dashboard/dashboard.js","components/projects/projectDetails.js","components/auth/signIn.js","components/auth/signup.js","store/actions/projectAction.js","components/projects/createProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/index.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","console","log","map","note","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","toString","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","prevProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","Signup","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","createProject","fireStore","userId","add","authorId","Date","CreateProject","history","push","name","App","exact","path","component","ProjectDetails","Signin","Boolean","window","location","hostname","initialState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edd5d6a3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      })\n      .catch(err => {\n        dispatch({ type: 'LOGIN_ERROR' }, err);\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' });\n      })\n      .catch(err => {\n        dispatch({ type: 'SIGNOUT_FAILED', err });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(res => {\n        return firestore\n          .collection('users')\n          .doc(res.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      })\n      .catch(err => {\n        dispatch({ type: 'SIGNUP_FAILED' }, err);\n      });\n  };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Log In</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SignedInLinks from './signedInLinks';\nimport SignedOutLinks from './signedOutLinks';\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Mario Plan\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = ({ notifications }) => {\n  console.log(notifications);\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(note => {\n                return (\n                  <li key={note.id}>\n                    <span className=\"pink-text\">{note.user} </span>\n                    <span> {note.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(note.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p> posted by {project.authorFirstName + project.authorLastName} </p>\n        <p className=\"grey-text\"> {moment(project.createAt.toDate().toString()).calendar()} </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectSummary from './projectSummary';\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={`/project/${project.id}`} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firebaseConnect, firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport Notifications from './notification';\nimport ProjectList from '../projects/projectList';\n\nclass Dashboard extends Component {\n  state = {};\n\n  render() {\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offest-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    {\n      collection: 'projects',\n      orderBy: ['createAt', 'desc'],\n    },\n    {\n      collection: 'notifications',\n      limit: 3,\n      orderBy: ['time', 'desc'],\n    },\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = props => {\n  const { auth, project } = props;\n  if (!auth.uid) {\n    return <Redirect to=\"/signin\" />;\n  }\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action gret lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>{moment(project.createAt.toDate().toString()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container center\">\n      <p>Loading project...</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, prevProps) => {\n  const { id } = prevProps.match.params;\n  const { projects } = state.firestore.data;\n  const project = projects ? projects[id] : null;\n  return {\n    project,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'projects' }])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signIn } from '../../store/actions/authActions';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"input-filed\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">{authError ? <p>{authError}</p> : null}</div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDespatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDespatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass Signup extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">firstName</label>\n            <input\n              type=\"text\"\n              id=\"firstName\"\n              onChange={this.handleChange}\n              value={this.state.firstName}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              type=\"text\"\n              id=\"lastName\"\n              onChange={this.handleChange}\n              value={this.state.lastName}\n            />\n          </div>\n          <div className=\"input-filed\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">{authError && <p>{authError}</p>}</div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const fireStore = getFirestore();\n    const {profile} = getState().firebase;\n    const userId = getState().firebase.auth.uid;\n    fireStore\n      .collection('projects')\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: userId,\n        createAt: new Date(),\n      })\n      .then(() => dispatch({ type: 'CREATE_PROJECT', project }))\n      .catch(e => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR', e });\n      });\n  };\n};\n\nexport default createProject;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport createProject from '../../store/actions/projectAction';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: '',\n  };\n\n  handleSubmit = e => {\n    const { createProject } = this.props;\n    e.preventDefault();\n    createProject(this.state);\n    this.props.history.push('/');\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              className=\"materialize-textarea\"\n              name=\"content\"\n              id=\"content\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-filed\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\nconst mapDispartchToProps = dispatch => {\n  return {\n    createProject: project => dispatch(createProject(project)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispartchToProps)(CreateProject);\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/navbar';\nimport Dashboard from './components/dashboard/dashboard';\nimport ProjectDetails from './components/projects/projectDetails';\nimport Signin from './components/auth/signIn';\nimport Signup from './components/auth/signup';\nimport CreateProject from './components/projects/createProject';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  authError: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      console.log('LOGIN FAILED');\n      return {\n        ...state,\n        authError: 'Login failed',\n      };\n    case 'LOGIN_SUCCESS':\n      console.log('LOGIN SUCCESS');\n      return {\n        ...state,\n        authError: null,\n      };\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return {\n        ...state,\n      };\n    case 'SIGNUP_SUCCESS':\n      console.log('SIGNUP_SUCCESS');\n      return {\n        ...state,\n        authError: null,\n      };\n    case 'SIGNUP_FAILED':\n      console.log('SIGNUP_FAILED');\n      return {\n        ...state,\n        authError: action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initialState = {\n  projects: [\n    { id: '1', title: 'first', content: 'contet for firest project' },\n    { id: '2', title: 'second', content: 'contet for second project' },\n    { id: '3', title: 'third', content: 'contet for third project' },\n  ],\n};\n\nconst projectReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('asdadadasd', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('CREATE_PROJECT_ERROR', action.e);\n  }\n  return state;\n};\n\nexport default projectReducer;\n","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDN1OehnLoc7iNkLc9_l80iffCrbNfUMHs',\n  authDomain: 'mario-plan-233ac.firebaseapp.com',\n  databaseURL: 'https://mario-plan-233ac.firebaseio.com',\n  projectId: 'mario-plan-233ac',\n  storageBucket: 'mario-plan-233ac.appspot.com',\n  messagingSenderId: '553273360544',\n  appId: '1:553273360544:web:12e7b3615769975c6c49c5',\n  measurementId: 'G-2ZGQQH2DNC',\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/reducers';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true,\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}